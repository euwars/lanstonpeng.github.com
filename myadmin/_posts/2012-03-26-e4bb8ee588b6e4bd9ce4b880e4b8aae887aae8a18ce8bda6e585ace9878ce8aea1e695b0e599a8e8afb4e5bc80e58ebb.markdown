---
author: lanstonpeng
comments: true
date: 2012-03-26 00:34:27+00:00
layout: post
slug: '%e4%bb%8e%e5%88%b6%e4%bd%9c%e4%b8%80%e4%b8%aa%e8%87%aa%e8%a1%8c%e8%bd%a6%e5%85%ac%e9%87%8c%e8%ae%a1%e6%95%b0%e5%99%a8%e8%af%b4%e5%bc%80%e5%8e%bb'
title: 从制作一个自行车公里计数器说方法论
wordpress_id: 641
categories:
- 未分类
tag:
- idea
---

我主要想focus在思路上，

这其实是一个方法论的问题，抽象到更高一层可应用到其它很多的场合中，决定于抽象的程度

**直观Focus型**

我们会很直接的将目光聚焦到事物表面上，很自然的会想到（这仅仅是我的猜测而已）



	
  * _路程=周长*转数_


周长直接可得，设置一个记录转数的装置，至于这个装置应该怎么设计呢？

[![](http://files.blogcn.com/wp06/M00/06/00/wKgKDE9siXoAAAAAAACPzFsBXEA401.png)](http://files.blogcn.com/wp03/M00/03/EA/wKgKC09siWcAAAAAAATdPBLe55c382.png)

方式可以有很多，譬如前架上设置一个装置，车轮的杆上也设置一个装置，类似光学接收仪， 每转一圈就会记录一次

当然，还有很多种入手的方式，譬如从车轴入手，用一些电板

再或者，将想法脱离事物的直观层面外，即到车轮之外，

譬如从脚踏板入手，脚踏板每转一圈都与车轮相关，这里也有着某种想法，

譬如记录脚踏板的转的次数，怎么记录？同样有着车轮的构造，很多想法可以借鉴过来，

抽象来说:

**可以说是寻找我们需要的变量（这里是公里数）影响到的参数，包括所有周边环境的所有参数、因数，无论是正相关抑或是负相关，又或者是影响我们所求的参数的可能性**

**<!-- more -->**

正如一个链表那样，找到该节点的前后的部分节点（因为找到大部分或者全部的节点需要很长时间的时间，这取决于实物的复杂程度，而且并非所有都是有用的信息）

[![](http://files.blogcn.com/wp02/M00/04/6B/wKgKCk9vNTcAAAAAAABdA0kHJZQ598.png)](http://files.blogcn.com/wp03/M00/03/EF/wKgKC09vNTUAAAAAAATbR0mDX_o137.png)

但是，既然脚踏板与我们的大腿相接，即直观事物有着联系的对等对象，我们是否可以从大腿入手呢？

譬如安装一个记录步数的app来模拟记录踩的次数（假设自行车走的是平地且该app良好）

**转换对等型：**

很多情况之下不必与其正面相碰，寻找与其相等的容易寻找到方法的实物，真实世界中的事物错中复杂，本质上都是是非线性，线性关系仅仅存在于某种层面上，

影响与被影响的因数并非简单的二者的因果关系，并非简单正负相关亦或简单的方程函数的解

[![](http://files.blogcn.com/wp02/M00/03/F5/wKgKC09vtIoAAAAAAAC0rliEq10322.png)](http://files.blogcn.com/wp04/M00/04/3D/wKgKDU9vtIgAAAAAAAYbCUC-feE186.png)

本质上，最核心的观点我已经在上面提出了，无非就是正面与侧面求解的问题

譬如在物理上计算的时候，运用运动学、能量守恒

假设单车装有电力发生器，问题很容易就转化为



	
  * _公里数=总发电能/单转发生电能_


记得在OS课上，老师讲到File System的存储问题的时候 ，既然运用几何的方式无法解决问题，那么就采用代数的方式，

譬如在存储文件的时候，分组链式到后来的Hash

回到这个主题之上，关于计算这个路程的变量，我想大家都有着一定的想法了

譬如我们拥有一个仅与转数有关的发电机，电能对应路程

譬如我们拥有一个卡路里计测器

只要我们能测量到影响所求量或者被影响的因数，或许就能测量出相应的结果了

估计大家肯定会想到利用手机GPS定位的功能，download一个tracking的app，忽略掉一些误差，也是可以做到的

好吧，上面所有的废话简单来说就是

从正面、侧面入手解决问题，其实是一个很简单的问题，正如许多的方法那样，心里知道只是执行起来困难，所以我们要亲身体验与经历啊

假设让你计算一个数中含有0的个数

你或许会

    
    var count=0,num=10086;
    while(num>1){
      if(parseInt(num%10)==0){count++}
      num/=10;
    }


或许还可以这样

    
    (num+"").length-(num+"").replace(/0/g,"").length


但是，实行起来我认为有两点难点



	
  * **清晰认识到我们所求的那个结点（找到问题的本质）**

	
  * **有效找出关系网（寻找到相关因数）**


最后，我还是想重复说说

**观点建立在我发这篇文章时我已知的事实与个人的逻辑推理能力**

_与此同时，附上一个我自己的案例：_
我住的小区的地方，楼下的保安每天早上都要打卡开门让人们出入（我们都是有门卡的，只是大家懒，然后保安一直都是帮大家开门的）
于是我在想，在上下班高峰期，保安每次都要刷卡开门，这样重复的工作太郁闷了，为什么不设置一个简便的控制装置来完成这些工作呢？
当然，不能用一块砖头什么的来挡住自动门，因为保安头头看到的话，这位保安就悲剧了
我在心中设计了一个小装置，思路是模拟打卡动作的机械装置，保安只需轻轻点击遥控便可开门，不需要亲自到门前刷卡
后来，我彻底的发现我的思维的局限性，强大的保安同学在门内用透明胶将内部开门按钮粘住，于是，门是没有关的，只需要推开即可
但是保安头头是不会注意到的（他往往是站在很远的地方巡查的），保安只需要站在那里发呆即可
这个例子很有趣，因为是我亲身经历的，印象很是深刻，其实本质上是一致的
